#Klasa reprezentujaca punkt
class Punkt
{
    #Dwa publiczne atrybuty
    public Float x;
    public Float y;

    public Point(Float x, Float y)
    {
        this.x = x;
        this.y = y;
    }
}

#Klasa reprezentujaca trojkat
class Trojkat
{
    #Atrybuty prywatne
    Punkt a;
    Punkt b;
    Punkt c;
    Float sideA; #Aktualne dlugosci bokow trojkata
    Float sideB;
    Float sideC;

    # Prywatna metoda na nowo obliczajaca dlugosci bokow trojkata
    void zaktualizujBoki()
    {
        sideA = ((a.x-b.x)**2 + (a.y-b.y)**2)**0.5;
        sideB = ((b.x-c.x)**2 + (b.y-c.y)**2)**0.5;
        sideC = ((c.x-a.x)**2 + (c.y-a.y)**2)**0.5;
    }


    public Trojkat(Punkt na, Punkt nb, Punkt nc) {
        a = na;
        b = nb;
        c = nc;
        zaktualizujBoki();        
    }

    public void setA(Punkt na)
    {
        a = na;
        zaktualizujBoki();
    }
    
    public void setB(Punkt nb)
    {
        b = nb;
        zaktualizujBoki();
    }

    public void setC(Punkt nc)
    {
        c = nc;
        zaktualizujBoki();
    }

    public Float obwod(){
        return sideA + sideB + sideC;
    }

    public Float pole(){
        Float s = obwod()/2;
        return (s*(s - sideA)*(s - sideB)*(s - c))**0.5;
}



Punkt a(5, 5);
Punkt b(0.0, 6.2);
Punkt c(3.2, -4.8);
Trojkat t(a, b, c);
float pole = t.pole();
print("Pole trojkata to " + str(pole) + "\n");
a.x = 20;
if(t.pole != pole)
{
    print("Cos nie tak, tu pole nie powinno sie zmienic\n");
}    
else
{
    print("Pole sie nie zmienilo\n");
}
t.setA(a);
if(t.pole != pole)
{
    String komunikat = "Pole trojkata zmienilo sie. Teraz jest rowne ";
    String poleStr = str(t.pole);
    komunikat = komunikat + poleStr + "\n";
    print(komunikat);
}    
else
{
    print("Cos nie tak, pole sie nie zmienilo\n");
}
